periodics:
  - name: periodic-kubernetes-unit-test-ppc64le
    cluster: k8s-ppc64le-cluster
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: ppc64le-kubernetes
        path_strategy: explicit
      gcs_credentials_secret: gcs-credentials
    interval: 3h
    extra_refs:
      - base_ref: master
        org: kubernetes
        repo: kubernetes
        workdir: true
    spec:
      containers:
        - image: quay.io/powercloud/all-in-one:0.2
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
              set -o xtrace

              export KUBE_TIMEOUT='--timeout=600s'
              export KUBE_KEEP_VERBOSE_TEST_OUTPUT=y
              export LOG_LEVEL=4
              wget -q -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_ppc64le
              chmod +x /usr/local/bin/yq
              pushd ./build/
              GOLANG_VERSION=`yq read dependencies.yaml 'dependencies(name==golang: upstream*).version'`
              popd
              url="https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-ppc64le.tar.gz"
              wget -O go.tgz "$url" --progress=dot:giga
              rm -rf /usr/local/go
              tar -C /usr/local -xzf go.tgz
              make test KUBE_RACE=-race
  - name: periodic-kubernetes-containerd-conformance-test-ppc64le
    cluster: k8s-ppc64le-cluster
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: ppc64le-kubernetes
        path_strategy: explicit
      gcs_credentials_secret: gcs-credentials
    interval: 3h
    extra_refs:
      - base_ref: master
        org: ppc64le-cloud
        repo: kubetest2-plugins
        workdir: true
    spec:
      volumes:
        - name: powercloud-bot-key
          secret:
            defaultMode: 256
            secretName: bot-ssh-secret
      containers:
        - image: quay.io/powercloud/all-in-one:0.4
          command:
            - /bin/bash
          volumeMounts:
            - mountPath: /etc/secret-volume
              name: powercloud-bot-key
              readOnly: true
          envFrom:
            - secretRef:
                name: ibm-cloud-credentials
          args:
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
              set -o xtrace

              export PATH=$GOPATH/bin:$PATH
              export GO111MODULE=on

              go install ./...

              go get sigs.k8s.io/kubetest2@latest
              go get sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest

              TIMESTAMP=$(date +%s)
              K8S_BUILD_VERSION=$(curl https://storage.googleapis.com/k8s-release-dev/ci/latest.txt)
              jq --arg key0 'k8s-build-version' --arg value0 $K8S_BUILD_VERSION '. | .[$key0]=$value0' <<<'{}' > $ARTIFACTS/metadata.json

              # kubectl needed for the e2e tests
              curl -sSL https://dl.k8s.io/ci/$K8S_BUILD_VERSION/bin/linux/`go env GOARCH`/kubectl > /usr/local/bin/kubectl
              chmod +x /usr/local/bin/kubectl

              kubetest2 tf --powervs-dns k8s-tests \
                --powervs-image-name centos8-stream-20GB \
                --powervs-region lon --powervs-zone lon04 \
                --powervs-service-id f57510e4-7109-45ab-9dbb-a9fd38529707 \
                --powervs-ssh-key powercloud-bot-key \
                --ssh-private-key /etc/secret-volume/ssh-privatekey \
                --build-version $K8S_BUILD_VERSION \
                --cluster-name config1-$TIMESTAMP \
                --workers-count 2 \
                --up --auto-approve --retry-on-tf-failure 3 \
                --break-kubetest-on-upfail true \
                --powervs-memory 32 \
                --test=ginkgo -- --parallel 10 --flake-attempts 2 --test-package-bucket k8s-release-dev --test-package-dir ci --test-package-version $K8S_BUILD_VERSION --focus-regex='\[Conformance\]' --skip-regex='\[Serial\]'
              #Workaround for kubetest2 failure to run twice
              #https://github.com/kubernetes-sigs/kubetest2/issues/176
              rm metadata.json
              export KUBECONFIG="$(pwd)/config1-$TIMESTAMP/kubeconfig"
              export ARTIFACTS=$ARTIFACTS/serial_tests_artifacts
              #Run Serial Conformance tests
              kubetest2 tf --powervs-region lon --powervs-zone lon04 \
                --powervs-service-id f57510e4-7109-45ab-9dbb-a9fd38529707 \
                --ignore-cluster-dir true \
                --cluster-name config1-$TIMESTAMP \
                --down --auto-approve --ignore-destroy-errors \
                --test=ginkgo -- --flake-attempts 2 \
                --test-package-bucket k8s-release-dev --test-package-dir ci \
                --test-package-version $K8S_BUILD_VERSION --focus-regex='\[Serial\].*\[Conformance\]'
