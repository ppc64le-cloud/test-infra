postsubmits:
  ppc64le-cloud/builds:
    - name: postsubmit-kubernetes-build-golang-master-ppc64le
      cluster: k8s-ppc64le-cluster
      decorate: true
      branches:
        - master
      run_if_changed: '^golang/master/'
      extra_refs:
        - base_ref: master
          org: kubernetes
          repo: kubernetes
          workdir: true
      spec:
        containers:
          - image: quay.io/powercloud/all-in-one:0.1
            command:
              - /bin/bash
            args:
              - -c
              - |
                set -o errexit
                set -o nounset
                set -o pipefail
                set -o xtrace

                build_commit=$(jq -r .commit $GOPATH/src/github.com/ppc64le-cloud/builds/golang/master/build.yaml)
                build_project=$(jq -r .project $GOPATH/src/github.com/ppc64le-cloud/builds/golang/master/build.yaml)
                curl -X GET http://build-bot.prow:8090/build\?project\=$build_project\&commit\=$build_commit -o /tmp/golang.tar.gz
                rm -rf /usr/local/go
                tar -C /usr/local -xzf /tmp/golang.tar.gz
                export PATH=/usr/local/go/bin:$PATH
                KUBE_BUILD_PLATFORMS=linux/ppc64le make cross

                GITCOMMIT=$(git rev-parse --short HEAD)
                mkdir -p _output/release-stage/kubernetes/{client,test,server}/bin

                cp _output/bin/kubectl _output/release-stage/kubernetes/client/bin/
                mv _output/bin/{apiextensions-apiserver,kube-aggregator,kube-apiserver,kube-controller-manager,kube-proxy,kube-scheduler,kubeadm,kubectl,kubelet} _output/release-stage/kubernetes/server/bin
                mv _output/bin/{genyaml,go-runner,e2e_node.test,genman,kubemark,ginkgo,genswaggertypedocs,gendocs,genkubedocs,e2e.test,linkcheck} _output/release-stage/kubernetes/test/bin/

                tar -zcvf kubernetes-test-linux-`go env GOARCH`.tar.gz --directory=_output/release-stage/ kubernetes/test/bin
                tar -zcvf kubernetes-client-linux-`go env GOARCH`.tar.gz --directory=_output/release-stage/ kubernetes/client/bin
                tar -zcvf kubernetes-server-linux-`go env GOARCH`.tar.gz --directory=_output/release-stage/ kubernetes/server/bin

                curl -v -X POST http://build-bot.prow:8090/build -H 'Content-Type: multipart/form-data' -F file1=@kubernetes-test-linux-`go env GOARCH`.tar.gz -F file2=@kubernetes-client-linux-`go env GOARCH`.tar.gz -F file3=@kubernetes-server-linux-`go env GOARCH`.tar.gz -F source=github.com/kubernetes/kubernetes.git -F commit=$GITCOMMIT -F project=kubernetes/master/golang/master
    - name: postsubmit-master-golang-kubernetes-unit-test-ppc64le
      cluster: k8s-ppc64le-cluster
      decorate: true
      branches:
        - master
      run_if_changed: '^golang/master/'
      extra_refs:
        - base_ref: master
          org: kubernetes
          repo: kubernetes
          workdir: true
      spec:
        containers:
          - image: quay.io/powercloud/all-in-one:0.1
            command:
              - /bin/bash
            args:
              - -c
              - |
                set -o errexit
                set -o nounset
                set -o pipefail
                set -o xtrace

                export KUBE_TIMEOUT='--timeout=600s'
                export KUBE_COVER="n"
                export KUBE_KEEP_VERBOSE_TEST_OUTPUT=y
                export LOG_LEVEL=4

                build_commit=$(jq -r .commit $GOPATH/src/github.com/ppc64le-cloud/builds/golang/master/build.yaml)
                build_project=$(jq -r .project $GOPATH/src/github.com/ppc64le-cloud/builds/golang/master/build.yaml)
                curl -X GET http://build-bot.prow:8090/build\?project\=$build_project\&commit\=$build_commit -o /tmp/golang.tar.gz
                rm -rf /usr/local/go
                tar -C /usr/local -xzf /tmp/golang.tar.gz
                export PATH=/usr/local/go/bin:$PATH
                export PATH=$GOPATH/bin:$PATH
                pushd ./hack/tools
                GO111MODULE=on go install gotest.tools/gotestsum
                popd

                make test
    - name: postsubmit-master-golang-kubernetes-conformance-test-ppc64le
      cluster: k8s-ppc64le-cluster
      decorate: true
      branches:
        - master
      run_if_changed: '^kubernetes/master/golang/master/'
      extra_refs:
        - base_ref: master
          org: ppc64le-cloud
          repo: kubetest2-plugins
          workdir: true
        - base_ref: v1.10.0
          org: IBM-Cloud
          repo: terraform-provider-ibm
      spec:
        volumes:
          - name: powercloud-bot-key
            secret:
              defaultMode: 256
              secretName: bot-ssh-secret
        containers:
          - image: quay.io/powercloud/all-in-one:0.3
            command:
              - /bin/bash
            volumeMounts:
              - mountPath: /etc/secret-volume
                name: powercloud-bot-key
                readOnly: true
            envFrom:
              - secretRef:
                  name: ibm-cloud-credentials
            args:
              - -c
              - |
                set -o errexit
                set -o nounset
                set -o pipefail
                set -o xtrace
                export PATH=$GOPATH/bin:$PATH
                export GO111MODULE=on

                go install ./...

                mkdir -p $HOME/.terraform.d/plugins/linux_`go env GOARCH`

                pushd $GOPATH/src/github.com/IBM-Cloud/terraform-provider-ibm
                go build .
                cp terraform-provider-ibm $HOME/.terraform.d/plugins/linux_`go env GOARCH`/terraform-provider-ibm_v1.10.0
                popd

                go get github.com/hashicorp/terraform-provider-null
                cp $GOPATH/bin/terraform-provider-null $HOME/.terraform.d/plugins/linux_`go env GOARCH`/

                go get sigs.k8s.io/kubetest2@latest
                go get sigs.k8s.io/kubetest2/kubetest2-tester-exec@latest

                TIMESTAMP=$(date +%s)

                # Details of IBM S3 storage
                S3_SERVER=s3.us-south.cloud-object-storage.appdomain.cloud
                BUCKET=ci-builds
                DIRECTORY=kubernetes/master/golang/master
                build_commit=$(jq -r .commit $GOPATH/src/github.com/ppc64le-cloud/builds/kubernetes/master/golang/master/build.yaml)

                K8S_BUILD_VERSION=$build_commit
                # e2e.test binary needed for running tests using k8s tests bits from IBM s3 storage
                URL=https://$S3_SERVER/$BUCKET/$DIRECTORY/$K8S_BUILD_VERSION
                wget -qO- $URL/kubernetes-test-linux-ppc64le.tar.gz | tar xz -C /usr/local/bin --strip-components=3
                # kubectl needed for the e2e tests
                wget -qO- $URL/kubernetes-client-linux-ppc64le.tar.gz | tar xz -C /usr/local/bin --strip-components=3

                kubetest2 tf --powervs-dns k8s-tests \
                    --powervs-image-name centos-83-12142020 \
                    --powervs-region tok --powervs-zone tok04 \
                    --powervs-service-id e13a10d2-9c2b-4d7b-b2fc-7a2b9edf1abf \
                    --powervs-ssh-key powercloud-bot-key \
                    --ssh-private-key /etc/secret-volume/ssh-privatekey \
                    --build-version $K8S_BUILD_VERSION \
                    --s3-server $S3_SERVER --bucket $BUCKET  --directory $DIRECTORY \
                    --cluster-name config3-$TIMESTAMP \
                    --up --down --auto-approve --retry-on-tf-failure 3 \
                    --break-kubetest-on-upfail true \
                    --ignore-destroy-errors \
                    --powervs-memory 32 \
                    --test=exec -- /usr/local/bin/ginkgo --nodes=10 /usr/local/bin/e2e.test \
                    -- --ginkgo.focus='\[Conformance\]' \
                    --ginkgo.skip='\[Disruptive\]|\[Serial\]' --report-dir=$ARTIFACTS \
                    --kubeconfig="$(pwd)/config3-$TIMESTAMP/kubeconfig"
